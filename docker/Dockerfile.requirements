# syntax=docker/dockerfile:1.4
ARG PYTHON_IMAGE=python:3.9.16-alpine3.17
# BUILD STAGE - Download dependencies from GitHub that require SSH access
FROM $PYTHON_IMAGE as build

RUN apk add --update --no-cache \
    git \
    openssh \
    postgresql-dev \
    musl-dev \
    libxslt-dev \
    python3-dev \
    libffi-dev \
    gcc \
    libcurl \
    bash \
    rust \
    build-base \
    cargo \
    curl-dev \
    && pip install --upgrade pip

COPY . /app
WORKDIR /app
# Only initialize submodules if they aren't already initialized.
# Otherwise, this will blow away any local uncommitted updates of the submodule silently.
RUN --mount=type=ssh git submodule status | grep '^-' > /dev/null && git submodule update --init --recursive || true
RUN --mount=type=ssh pip wheel -r requirements.txt -w /pip-packages

# RUNTIME STAGE - Copy packages from build stage and install runtime dependencies
FROM $PYTHON_IMAGE

RUN apk -U upgrade binutils busybox expat libretls && \
    apk add --no-cache postgresql-libs && \
    apk add --no-cache --virtual .build-deps gcc \
    libxslt-dev \
    libffi-dev \
    make \
    curl


WORKDIR /pip-packages/
COPY --from=build /pip-packages/ /pip-packages/

RUN pip install --no-deps --no-index --find-links=/pip-packages/ /pip-packages/*
